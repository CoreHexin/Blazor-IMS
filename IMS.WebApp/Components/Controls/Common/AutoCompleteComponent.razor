<div class="form-group">
    <label for="search">@Label</label>
    <input type="text" class="form-control" @bind-value=UserInput @bind-value:event="oninput" @onkeyup=OnKeyup />
</div>

@if (searchResults is not null && searchResults.Any())
{
    <div class="inventory-box">
        <ul class="inventory-list">
            @{
                int itemIndex = 0;
                foreach (var item in searchResults)
                {
                    <li @key=item.Id @onclick="() => SelectItem(item)" class="@(itemIndex == currentItemIndex ? "selected" : "")" >
                        @item.Name
                    </li>
                    itemIndex++;
                }
            }
        </ul>
    </div>
}

@code {
    [Parameter]
    public string Label { get; set; } = string.Empty;

    [Parameter]
    public Func<string, List<ItemViewModel>>? SearchFunction { get; set; }

    [Parameter]
    public EventCallback<ItemViewModel?> SelectedCallback { get; set; }

    private List<ItemViewModel>? searchResults = null;

    private ItemViewModel? selectedItem = null;

    private ItemViewModel? currentItem = null;
    private int currentItemIndex = -1;

    private string _userInput = string.Empty;

    public string UserInput
    {
        get { return _userInput; }
        set 
        { 
            _userInput = value; 
            if (!string.IsNullOrWhiteSpace(_userInput) && SearchFunction is not null)
            {
                searchResults = SearchFunction(_userInput);
            }
            else
            {
                SelectedCallback.InvokeAsync(null);
                ClearHightlighting();
            }
        }
    }

    public class ItemViewModel
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
    }

    private void SelectItem(ItemViewModel item)
    {
        if (item is not null)
        {
            selectedItem = item;
            UserInput = item.Name ?? string.Empty;    
            SelectedCallback.InvokeAsync(item);
        }

        ClearHightlighting();
    }

    private void ClearHightlighting()
    {
        searchResults = null;
        currentItem = null;
        currentItemIndex = -1;
    }

    private void OnKeyup(KeyboardEventArgs e)
    {
        if (searchResults is not null && searchResults.Any() && (e.Code == "ArrowDown" || e.Code == "ArrowUp"))
        {
            if (e.Code == "ArrowDown" && currentItemIndex < searchResults.Count - 1)
            {
                currentItemIndex += 1;
                currentItem = searchResults[currentItemIndex];
            }

            if (e.Code == "ArrowUp" && currentItemIndex > 0)
            {
                currentItemIndex -= 1;
                currentItem = searchResults[currentItemIndex];
            }
        }

        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            if (currentItem is not null)
            {
                SelectItem(currentItem);
            }
        }

    }
    
}
