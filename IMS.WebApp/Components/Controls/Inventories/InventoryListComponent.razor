@using IMS.CoreBusiness
@using IMS.UseCases.Inventories.Interfaces

@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Quantity</th>
            <th>Price</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (_inventories is not null && _inventories.Any())
        {
            foreach (var inventory in _inventories)
            {
                <InventoryListItemComponent Inventory="inventory" />
            }
        }
    </tbody>
</table>

@code {
    private List<Inventory>? _inventories;

    [Parameter]
    public string NameForSearch { get; set; } = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        _inventories = (await ViewInventoriesByNameUseCase.ExecuteAsync(NameForSearch)).ToList();
    }
}
