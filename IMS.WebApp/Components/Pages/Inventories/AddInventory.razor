@page "/inventory/add"
@rendermode InteractiveServer

@using IMS.CoreBusiness
@using IMS.UseCases.Inventories.Interfaces

@inject IAddInventoryUseCase AddInventoryUserCase
@inject NavigationManager NavigationManager

<h3>添加物料</h3>

<EditForm Model="inventory" OnValidSubmit="Add">
    <DataAnnotationsValidator />

    <div class="form-group mb-3">
        <label for="name">物料名称</label>
        <InputText id="name" @bind-Value=inventory.Name class="form-control" />
        <ValidationMessage For="() => inventory.Name" />
    </div>

    <div class="form-group mb-3">
        <label for="quantity">数量</label>
        <InputNumber id="quantity" @bind-Value=inventory.Quantity class="form-control" />
        <ValidationMessage For="() => inventory.Quantity" />
    </div>

    <div class="form-group mb-3">
        <label for="price">单价</label>
        <InputNumber id="price" @bind-Value=inventory.Price class="form-control" />
        <ValidationMessage For="() => inventory.Price" />
    </div>

    <button type="submit" class="btn btn-primary">添加</button>
    <a href="/inventories" class="btn btn-primary">取消</a>
</EditForm>

@code {
    private Inventory inventory { get; set; } = new Inventory();

    private async Task Add()
    {
        await AddInventoryUserCase.ExecuteAsync(inventory);
        NavigationManager.NavigateTo("/inventories");
    }
}
